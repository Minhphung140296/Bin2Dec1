{"ast":null,"code":"import _slicedToArray from \"/Users/lephung/Desktop/reactjs/Bin2Dec/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lephung/Desktop/reactjs/Bin2Dec/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { StyledForm, Field, Lable, BinaryTextInput, Button, DecimalTextInput } from './styles';\n\nfunction App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      binaryText = _useState2[0],\n      setBinaryText = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      decimalText = _useState4[0],\n      setDecimalText = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1]; // tạo form thực hiện biểu mẫu gửi\n\n\n  var onFormSubmit = function onFormSubmit(e) {\n    e.preventDefault(); // ngăn chặn làm mới trình duyệt\n    //chỉ chấp nhận giá trị nhập vào là 0 và 1\n\n    if (binaryText.match(/^[0-1]+$/g) === null) {\n      setErrorMessage(\"Enter either 0 or 1\");\n      return;\n    }\n\n    setErrorMessage(''); //Đặt lại thông báo lỗi\n\n    /*Công thức:\n        input = 1 => output = 1*(2^0) = 1\n        input = 10 => output = 0*(2^0)+ (1*(2^1)) = 2\n        => tính từ phía sau tính lên\n    */\n\n    var reversedbinaryText = binaryText.split('').map(Number) // chuyển đổi từ 1 số từ chuỗi\n    .reverse(); //tính kết quả bằng các value trước\n\n    var result = reversedbinaryText.reduce(function (accumulator, currentValue, idx) {\n      return accumulator + currentValue * Math.pow(2, idx);\n    });\n    setDecimalText(result);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Binary to Decimal Converter\"), /*#__PURE__*/React.createElement(StyledForm, {\n    onSubmit: onFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, errorMessage && /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 34\n    }\n  }, errorMessage), /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Lable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Binary Input\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(BinaryTextInput, {\n    autoComplete: \"off\",\n    type: \"text\",\n    name: \"binary\",\n    placeholder: \"enter 0 or 1\",\n    value: binaryText,\n    onChange: function onChange(e) {\n      return setBinaryText(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"Convert\"))), /*#__PURE__*/React.createElement(Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Lable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"Decimal Output\"), /*#__PURE__*/React.createElement(DecimalTextInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }))));\n}\n\nvar rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 18\n  }\n}), rootElement);","map":{"version":3,"sources":["/Users/lephung/Desktop/reactjs/Bin2Dec/src/index.js"],"names":["React","useState","ReactDOM","StyledForm","Field","Lable","BinaryTextInput","Button","DecimalTextInput","App","binaryText","setBinaryText","decimalText","setDecimalText","errorMessage","setErrorMessage","onFormSubmit","e","preventDefault","match","reversedbinaryText","split","map","Number","reverse","result","reduce","accumulator","currentValue","idx","Math","pow","color","target","value","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport { StyledForm, Field, Lable, BinaryTextInput, Button, DecimalTextInput } from './styles';\n\nfunction App(){\n    const [binaryText, setBinaryText] = useState('');\n    const [decimalText, setDecimalText] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    // tạo form thực hiện biểu mẫu gửi\n    const onFormSubmit = e =>{\n        e.preventDefault();// ngăn chặn làm mới trình duyệt\n        //chỉ chấp nhận giá trị nhập vào là 0 và 1\n        if(binaryText.match(/^[0-1]+$/g) === null){\n            setErrorMessage(\"Enter either 0 or 1\");\n            return\n        }\n        setErrorMessage('') //Đặt lại thông báo lỗi\n\n        /*Công thức:\n            input = 1 => output = 1*(2^0) = 1\n            input = 10 => output = 0*(2^0)+ (1*(2^1)) = 2\n            => tính từ phía sau tính lên\n        */\n       const reversedbinaryText = binaryText\n        .split('')\n        .map(Number) // chuyển đổi từ 1 số từ chuỗi\n        .reverse()\n\n        //tính kết quả bằng các value trước\n        const result = reversedbinaryText.reduce(\n            (accumulator, currentValue,idx)=>\n                accumulator + currentValue * Math.pow(2,idx)\n        )\n        setDecimalText(result);\n    }\n\n    return (\n        <>\n            <h1>Binary to Decimal Converter</h1>\n            <StyledForm onSubmit={onFormSubmit}>\n                {errorMessage && <span style={{color:'red'}}>{errorMessage}</span>}\n                <Field>\n                    <Lable>Binary Input</Lable>\n                    <div>\n                        <BinaryTextInput \n                            autoComplete=\"off\"\n                            type=\"text\"\n                            name='binary'\n                            placeholder=\"enter 0 or 1\"\n                            value = {binaryText}\n                            onChange={e => setBinaryText(e.target.value)}\n                        />\n                        <Button>Convert</Button>\n                    </div>\n                </Field>\n                <Field>\n                    <Lable>Decimal Output</Lable>\n                    <DecimalTextInput />\n                </Field>\n            </StyledForm>\n        </>\n    );\n}\nconst rootElement = document.getElementById('root')\nReactDOM.render( <App />,rootElement)"]},"metadata":{},"sourceType":"module"}